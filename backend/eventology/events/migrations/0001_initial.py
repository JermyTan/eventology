# Generated by Django 3.2.2 on 2021-05-11 09:26

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import django_update_from_dict


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('image_urls', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), size=None)),
                ('image_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('start_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField()),
                ('venue', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            bases=(django_update_from_dict.UpdateFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EventCategoryType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['name'],
            },
            bases=(django_update_from_dict.UpdateFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LikedEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
            options={
                'ordering': ['created_at'],
            },
            bases=(django_update_from_dict.UpdateFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EventSignUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
            options={
                'ordering': ['created_at'],
            },
            bases=(django_update_from_dict.UpdateFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EventComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user')),
            ],
            options={
                'ordering': ['created_at'],
            },
            bases=(django_update_from_dict.UpdateFromDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventcategorytype')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
            ],
            bases=(django_update_from_dict.UpdateFromDictMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name='likedevent',
            constraint=models.UniqueConstraint(fields=('user_id', 'event_id'), name='unique_user_liked_event'),
        ),
        migrations.AddConstraint(
            model_name='eventsignup',
            constraint=models.UniqueConstraint(fields=('user_id', 'event_id'), name='unique_user_event_signup'),
        ),
        migrations.AddConstraint(
            model_name='eventcategory',
            constraint=models.UniqueConstraint(fields=('category_id', 'event_id'), name='unique_event_category'),
        ),
        migrations.AddConstraint(
            model_name='event',
            constraint=models.CheckConstraint(check=models.Q(('image_urls__len', django.db.models.expressions.F('image_ids__len'))), name='num_image_urls_eq_num_image_ids'),
        ),
        migrations.AddConstraint(
            model_name='event',
            constraint=models.CheckConstraint(check=models.Q(('start_date_time__lte', django.db.models.expressions.F('end_date_time'))), name='event_start_date_time_lte_end_date_time'),
        ),
    ]
